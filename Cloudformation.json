{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "",
    "Resources": {
        "EC2Instance": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "InstanceType": "t2.micro",
                "SecurityGroupIds": [
                    {
                        "Ref": "EC2SecurityGroup"
                    }
                ],
                "ImageId": "ami-02e136e904f3da870",
                "AvailabilityZone": "us-east-1a",
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash \n",
                                "su - ec2-user\n",
                                "cd ~\n",
                                "sudo yum -y update\n",
                                "sudo yum -y install git\n",
                                "git clone https://github.com/zacherytcox/quest.git\n",
                                "cd quest\n",
                                "sudo yum install -y docker\n",
                                "sudo service docker start\n",
                                "sudo usermod -a -G docker ec2-user\n",
                                "docker build -t nodeimage1 . \n",
                                "docker run -p 3000:3000 nodeimage1\n"
                            ]
                        ]
                    }
                },
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/xvda",
                        "Ebs": {
                            "VolumeType": "gp2",
                            "DeleteOnTermination": "true",
                            "VolumeSize": "30"
                        }
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "CFDockerAuto"
                    }
                ]
            },
            "DependsOn": [
                "EC2SecurityGroup"
            ]
        },
        "EC2SecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "EC2 Security Group",
                "SecurityGroupIngress": [
                    {
                        "SourceSecurityGroupId": {
                            "Ref": "ELBSecurityGroup"
                        },
                        "ToPort": "3000",
                        "IpProtocol": "-1"
                    }
                ],
                "VpcId": "vpc-505a6e37"
            },
            "DependsOn": [
                "ELBSecurityGroup"
            ]
        },
        "ELB": {
            "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
            "Properties": {
                "IpAddressType": "ipv4",
                "Scheme": "internet-facing",
                "Name" : "test",
                "SecurityGroups": [
                    {
                        "Ref": "ELBSecurityGroup"
                    }
                ],
                "SubnetMappings": [
                    {
                        "SubnetId": "subnet-77b54d2c"
                    },
                    {
                        "SubnetId": "subnet-e5bf2580"
                    }
                ],
                "Type": "application"
            }
        },
        "ELBTG": {
            "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
            "Properties": {
                "Port": 3000,
                "Protocol": "HTTP",
                "TargetType": "instance",
                "Targets" : [ {
                    "Id" : {
                        "Ref": "EC2Instance"
                    },
                    "Port" : 3000
                  } ],
                "VpcId": "vpc-505a6e37"
            }
        },
        "ELBLis": {
            "Type": "AWS::ElasticLoadBalancingV2::Listener",
            "Properties": {
                "DefaultActions": [ {
                    "TargetGroupArn" : {
                        "Ref": "ELBTG"
                    },
                    "Type" : "forward"
                  }
                ],
                "LoadBalancerArn": {
                    "Ref": "ELB"
                },
                "Port": 80,
                "Protocol": "HTTP"
            }
        },
        "ELBSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "EC2 Security Group",
                "SecurityGroupIngress": [
                    {
                        "CidrIp": "75.60.3.46/32",
                        "ToPort": "-1",
                        "IpProtocol": "-1"
                    }
                ],
                "VpcId": "vpc-505a6e37"
            }
        }
    },
    "Outputs": {
        "PublicDNS": {
            "Description": "Public DNSName of the newly created EC2 instance",
            "Value": {
                "Fn::GetAtt": [
                    "EC2Instance",
                    "PublicDnsName"
                ]
            }
        },
        "PublicIP": {
            "Description": "Public IP address of the newly created EC2 instance",
            "Value": {
                "Fn::GetAtt": [
                    "EC2Instance",
                    "PublicIp"
                ]
            }
        }
    }
}